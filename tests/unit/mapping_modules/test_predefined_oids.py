# -*- coding: utf-8 -*-
#
# This file is part of bdsSnmpAdaptor software.
#
# Copyright (C) 2017-2019, RtBrick Inc
# License: BSD License 2.0
#
import asyncio
import os
import sys
import unittest
from unittest import mock

from bdssnmpadaptor import oidDb
from bdssnmpadaptor.mapping_modules import predefined_oids


@mock.patch('tempfile.NamedTemporaryFile', new=mock.MagicMock)
class StaticAndPredefinedOidsTestCase(unittest.TestCase):

    STATIC_CONFIG = {
        'sysDescr': 'l2.pod2.nbg2.rtbrick.net',
        'sysContact': 'stefan@rtbrick.com',
        'sysName': 'l2.pod2.nbg2.rtbrick.net',
        'sysLocation': 'nbg2.rtbrick.net',
        'sysObjectID': '1.3.6.1.4.1.50058.102.1',
        'sysUpTime': 0,
        'sysServices': 72
    }

    CONFIG = {
        'snmp': {
            'mibs': [
                os.path.join(os.path.dirname(predefined_oids.__file__), '..', '..', 'mibs')
            ]
        }
    }

    def setUp(self):
        with mock.patch.object(oidDb, 'loadConfig', autospec=True) as config_mock:
            with mock.patch.object(oidDb, 'set_logging', autospec=True):
                config_mock.return_value = self.CONFIG
                self.oidDb = oidDb.OidDb({'config': {}})

        self.container = predefined_oids.StaticAndPredefinedOids()

        self.my_loop = asyncio.new_event_loop()
        self.addCleanup(self.my_loop.close)

        super(StaticAndPredefinedOidsTestCase, self).setUp()

    def test_setOids(self):
        self.my_loop.run_until_complete(
            self.container.setOids(self.STATIC_CONFIG, self.oidDb, [], 0))

        oids_in_db = []
        oid = '1.3.6'
        while oid:
            oid = self.oidDb.getNextOid(oid)
            if oid:
                oids_in_db.append(oid)

        expected = [
            '1.3.6.1.2.1.1.1.0',
            '1.3.6.1.2.1.1.2.0',
            '1.3.6.1.2.1.1.3.0',
            '1.3.6.1.2.1.1.4.0',
            '1.3.6.1.2.1.1.5.0',
            '1.3.6.1.2.1.1.6.0',
            '1.3.6.1.2.1.1.7.0',
            '1.3.6.1.2.1.25.1.1.0',
            '1.3.6.1.2.1.47.1.1.1.1.1.1',
            '1.3.6.1.2.1.47.1.1.1.1.1.2',
            '1.3.6.1.2.1.47.1.1.1.1.1.3',
            '1.3.6.1.2.1.47.1.1.1.1.1.4',
            '1.3.6.1.2.1.47.1.1.1.1.1.5',
            '1.3.6.1.2.1.47.1.1.1.1.1.6',
            '1.3.6.1.2.1.47.1.1.1.1.2.1',
            '1.3.6.1.2.1.47.1.1.1.1.2.2',
            '1.3.6.1.2.1.47.1.1.1.1.2.3',
            '1.3.6.1.2.1.47.1.1.1.1.2.4',
            '1.3.6.1.2.1.47.1.1.1.1.2.5',
            '1.3.6.1.2.1.47.1.1.1.1.2.6',
            '1.3.6.1.2.1.47.1.1.1.1.3.1',
            '1.3.6.1.2.1.47.1.1.1.1.3.2',
            '1.3.6.1.2.1.47.1.1.1.1.3.3',
            '1.3.6.1.2.1.47.1.1.1.1.3.4',
            '1.3.6.1.2.1.47.1.1.1.1.3.5',
            '1.3.6.1.2.1.47.1.1.1.1.3.6',
            '1.3.6.1.2.1.47.1.1.1.1.4.1',
            '1.3.6.1.2.1.47.1.1.1.1.4.2',
            '1.3.6.1.2.1.47.1.1.1.1.4.3',
            '1.3.6.1.2.1.47.1.1.1.1.4.4',
            '1.3.6.1.2.1.47.1.1.1.1.4.5',
            '1.3.6.1.2.1.47.1.1.1.1.4.6',
            '1.3.6.1.2.1.47.1.1.1.1.5.1',
            '1.3.6.1.2.1.47.1.1.1.1.5.2',
            '1.3.6.1.2.1.47.1.1.1.1.5.3',
            '1.3.6.1.2.1.47.1.1.1.1.5.4',
            '1.3.6.1.2.1.47.1.1.1.1.5.5',
            '1.3.6.1.2.1.47.1.1.1.1.5.6',
            '1.3.6.1.2.1.47.1.1.1.1.6.1',
            '1.3.6.1.2.1.47.1.1.1.1.6.2',
            '1.3.6.1.2.1.47.1.1.1.1.6.3',
            '1.3.6.1.2.1.47.1.1.1.1.6.4',
            '1.3.6.1.2.1.47.1.1.1.1.6.5',
            '1.3.6.1.2.1.47.1.1.1.1.6.6',
            '1.3.6.1.2.1.47.1.1.1.1.7.1',
            '1.3.6.1.2.1.47.1.1.1.1.7.2',
            '1.3.6.1.2.1.47.1.1.1.1.7.3',
            '1.3.6.1.2.1.47.1.1.1.1.7.4',
            '1.3.6.1.2.1.47.1.1.1.1.7.5',
            '1.3.6.1.2.1.47.1.1.1.1.7.6',
            '1.3.6.1.2.1.47.1.1.1.1.8.1',
            '1.3.6.1.2.1.47.1.1.1.1.8.2',
            '1.3.6.1.2.1.47.1.1.1.1.8.3',
            '1.3.6.1.2.1.47.1.1.1.1.8.4',
            '1.3.6.1.2.1.47.1.1.1.1.8.5',
            '1.3.6.1.2.1.47.1.1.1.1.8.6',
            '1.3.6.1.2.1.47.1.1.1.1.9.1',
            '1.3.6.1.2.1.47.1.1.1.1.9.2',
            '1.3.6.1.2.1.47.1.1.1.1.9.3',
            '1.3.6.1.2.1.47.1.1.1.1.9.4',
            '1.3.6.1.2.1.47.1.1.1.1.9.5',
            '1.3.6.1.2.1.47.1.1.1.1.9.6',
            '1.3.6.1.2.1.47.1.1.1.1.10.1',
            '1.3.6.1.2.1.47.1.1.1.1.10.2',
            '1.3.6.1.2.1.47.1.1.1.1.10.3',
            '1.3.6.1.2.1.47.1.1.1.1.10.4',
            '1.3.6.1.2.1.47.1.1.1.1.10.5',
            '1.3.6.1.2.1.47.1.1.1.1.10.6',
            '1.3.6.1.2.1.47.1.1.1.1.11.1',
            '1.3.6.1.2.1.47.1.1.1.1.11.2',
            '1.3.6.1.2.1.47.1.1.1.1.11.3',
            '1.3.6.1.2.1.47.1.1.1.1.11.4',
            '1.3.6.1.2.1.47.1.1.1.1.11.5',
            '1.3.6.1.2.1.47.1.1.1.1.11.6',
            '1.3.6.1.2.1.47.1.1.1.1.12.1',
            '1.3.6.1.2.1.47.1.1.1.1.12.2',
            '1.3.6.1.2.1.47.1.1.1.1.12.3',
            '1.3.6.1.2.1.47.1.1.1.1.12.4',
            '1.3.6.1.2.1.47.1.1.1.1.12.5',
            '1.3.6.1.2.1.47.1.1.1.1.12.6',
            '1.3.6.1.2.1.47.1.1.1.1.13.1',
            '1.3.6.1.2.1.47.1.1.1.1.13.2',
            '1.3.6.1.2.1.47.1.1.1.1.13.3',
            '1.3.6.1.2.1.47.1.1.1.1.13.4',
            '1.3.6.1.2.1.47.1.1.1.1.13.5',
            '1.3.6.1.2.1.47.1.1.1.1.13.6',
            '1.3.6.1.2.1.47.1.1.1.1.14.1',
            '1.3.6.1.2.1.47.1.1.1.1.14.2',
            '1.3.6.1.2.1.47.1.1.1.1.14.3',
            '1.3.6.1.2.1.47.1.1.1.1.14.4',
            '1.3.6.1.2.1.47.1.1.1.1.14.5',
            '1.3.6.1.2.1.47.1.1.1.1.14.6',
            '1.3.6.1.2.1.47.1.1.1.1.15.1',
            '1.3.6.1.2.1.47.1.1.1.1.15.2',
            '1.3.6.1.2.1.47.1.1.1.1.15.3',
            '1.3.6.1.2.1.47.1.1.1.1.15.4',
            '1.3.6.1.2.1.47.1.1.1.1.15.5',
            '1.3.6.1.2.1.47.1.1.1.1.15.6',
            '1.3.6.1.2.1.47.1.1.1.1.16.1',
            '1.3.6.1.2.1.47.1.1.1.1.16.2',
            '1.3.6.1.2.1.47.1.1.1.1.16.3',
            '1.3.6.1.2.1.47.1.1.1.1.16.4',
            '1.3.6.1.2.1.47.1.1.1.1.16.5',
            '1.3.6.1.2.1.47.1.1.1.1.16.6',
            '1.3.6.1.2.1.47.1.1.1.1.17.1',
            '1.3.6.1.2.1.47.1.1.1.1.17.2',
            '1.3.6.1.2.1.47.1.1.1.1.17.3',
            '1.3.6.1.2.1.47.1.1.1.1.17.4',
            '1.3.6.1.2.1.47.1.1.1.1.17.5',
            '1.3.6.1.2.1.47.1.1.1.1.17.6',
            '1.3.6.1.2.1.47.1.1.1.1.18.1',
            '1.3.6.1.2.1.47.1.1.1.1.18.2',
            '1.3.6.1.2.1.47.1.1.1.1.18.3',
            '1.3.6.1.2.1.47.1.1.1.1.18.4',
            '1.3.6.1.2.1.47.1.1.1.1.18.5',
            '1.3.6.1.2.1.47.1.1.1.1.18.6'
        ]

        self.assertEqual(expected, [str(o) for o in oids_in_db])


suite = unittest.TestLoader().loadTestsFromModule(sys.modules[__name__])

if __name__ == '__main__':
    unittest.TextTestRunner(verbosity=2).run(suite)
